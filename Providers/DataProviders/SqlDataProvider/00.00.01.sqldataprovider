/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

USE DotNetNuke;
--BEGIN TRAN

IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Angular_Gem_Store_Inventory') AND type in (N'U'))
	DROP TABLE dbo.Angular_Gem_Store_Inventory
GO

GO
CREATE TABLE dbo.Angular_Gem_Store_Inventory
	(
	RecordId int NOT NULL IDENTITY (1, 1),
	Name varchar(50) NOT NULL,
	Description varchar(MAX) NOT NULL,
	shine smallint NOT NULL,
	price money NOT NULL,
	rarity smallint NOT NULL,
	color varchar(7) NOT NULL,
	faces smallint NOT NULL
	)  ON [PRIMARY]
	 TEXTIMAGE_ON [PRIMARY]
GO

--SET IDENTITY_INSERT dbo.Angular_Gem_Store_Inventory ON
--GO

INSERT INTO dbo.Angular_Gem_Store_Inventory (RecordId, Name, Description, shine, price, rarity, color, faces)
SELECT * FROM (
	SELECT 1 AS I, 'Azurite' AS N, 'Some gems have hidden qualities beyond their luster, beyond their shine... Azurite is one of those gems.' AS D, 8 AS S, 110.50 AS P, 7 AS R, '#CCC' AS C, 14 AS F
	UNION ALL
	SELECT 2, 'Bloodstone', 'Origin of the Bloodstone is unknown, hence its low value. It has a very high shine and 12 sides, however.', 9, 22.90, 6, '#EEE', 12 
	UNION ALL
	SELECT 3, 'Zircon', 'Zircon is our most coveted and sought after gem. You will pay much to be the proud owner of this gorgeous and high shine gem.', 70, 1100.00, 2, '#000', 6 
) a

ALTER TABLE dbo.Angular_Gem_Store_Inventory ADD CONSTRAINT
	PK_Angular_Gem_Store_Inventory PRIMARY KEY CLUSTERED 
	(
	RecordId
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO

-- Images
IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Angular_Gem_Store_Inventory_Images') AND type in (N'U'))
	DROP TABLE dbo.Angular_Gem_Store_Inventory_Images
GO

CREATE TABLE dbo.Angular_Gem_Store_Inventory_Images
	(
	RecordId int NOT NULL IDENTITY (1, 1),
	ItemId int NOT NULL,
	ImagePath varchar(255) NOT NULL
	)  ON [PRIMARY]
GO
ALTER TABLE dbo.Angular_Gem_Store_Inventory_Images SET (LOCK_ESCALATION = TABLE)
GO

INSERT INTO dbo.Angular_Gem_Store_Inventory_Images (RecordId, ItemId, ImagePath)
SELECT * FROM (
	SELECT 1 AS R, 1 AS I, 'images/gem-02.gif' AS IP 
	UNION ALL
	SELECT 2, 1, 'images/gem-05.gif' 
	UNION ALL
	SELECT 3, 1, 'images/gem-09.gif' 
	UNION ALL
	SELECT 4, 2, 'images/gem-01.gif' 
	UNION ALL
	SELECT 5, 2, 'images/gem-03.gif' 
	UNION ALL
	SELECT 6, 2, 'images/gem-04.gif' 
	UNION ALL
	SELECT 7, 3, 'images/gem-06.gif' 
	UNION ALL
	SELECT 8, 3, 'images/gem-07.gif' 
	UNION ALL
	SELECT 9, 3, 'images/gem-10.gif' 
) a

ALTER TABLE dbo.Angular_Gem_Store_Inventory_Images ADD CONSTRAINT
	PK_Angular_Gem_Store_Inventory_Images PRIMARY KEY CLUSTERED 
	(
	RecordId
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO

-- Reviews
IF EXISTS(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.Angular_Gem_Store_Inventory_Reviews') AND type in (N'U'))
	DROP TABLE dbo.Angular_Gem_Store_Inventory_Reviews
GO

CREATE TABLE dbo.Angular_Gem_Store_Inventory_Reviews
	(
	RecordId int NOT NULL IDENTITY (1, 1),
	ItemId int NOT NULL,
	Stars tinyint NOT NULL,
	Body varchar(MAX) NOT NULL,
	Author varchar(255) NOT NULL,
	CreatedOn date NOT NULL
	)  ON [PRIMARY]
	 TEXTIMAGE_ON [PRIMARY]
GO

INSERT INTO dbo.Angular_Gem_Store_Inventory_Reviews (RecordId, ItemId, Stars, Body, Author, CreatedOn)
SELECT * FROM (
	SELECT 1 R, 1 I, 5 S, 'I love this gem!' B, 'joe@example.org' A, CAST(GETDATE() AS DATE) C
	UNION ALL
	SELECT 2, 1, 1, 'This gem sucks', 'tim@example.org', CAST(GETDATE() AS DATE) 
	UNION ALL
	SELECT 3, 2, 3, 'I think this gem was just OK, could honestly use more shine, IMO.', 'JimmyDean@example.org', CAST(GETDATE() AS DATE) 
	UNION ALL
	SELECT 4, 2, 4, 'Any gem with 12 faces is for me!', 'gemsRock@example.org', CAST(GETDATE() AS DATE) 
	UNION ALL
	SELECT 5, 3, 1, 'This gem is WAY too expensive for its rarity value.', 'turtleguyy@example.org', CAST(GETDATE() AS DATE) 
	UNION ALL
	SELECT 6, 3, 1, 'BBW: High Shine != High Quality.', 'LouisW407@example.org', CAST(GETDATE() AS DATE) 
	UNION ALL
	SELECT 7, 3, 1, 'Don''t waste your rubles!', 'nat@example.org', CAST(GETDATE() AS DATE) 
) AS a


ALTER TABLE dbo.Angular_Gem_Store_Inventory_Reviews ADD CONSTRAINT
	PK_Angular_Gem_Store_Inventory_Reviews PRIMARY KEY CLUSTERED 
	(
	RecordId
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
ALTER TABLE dbo.Angular_Gem_Store_Inventory_Reviews SET (LOCK_ESCALATION = TABLE)
GO


--COMMIT TRAN


/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/